from turtle import end_fill, pensize


x = 10 #python usa solo puntatori
x = 'ciao' #questa assegnazione dice al compilatore di puntare a 'ciao' rendendo inacessibile il 10 	   #nella ram e ciò viene definito oggetto orfano.

S1 = "ciao"    #si possono assegnare in entrambi i modi.
S2 = 'buongiorno'

print(S1[0]) #stamperà c.

i = 3
S1[i] #serve per otterenere un carattere nella posizione i

S1[-4] #stamperà c
print(S1[-1]) #stamperà o e questo server per sapere qual'è l'ultimo carattere della stringa.
#sono esempi di indicizzazione
"""
----------------------------------------------------------------------------------------------------
						LO SLICING
"""

p1 = 2
p2 = 6
g = 1
S1[p1:p2:g] #p1 è il primo indice,p2 èil secondo indice e g è il numermo e questo è il caso più genrale.
print(S2[1:5])#prende i caratteri dall'uno al 5 escluso e samperà "uong"
print(S2[1:5:2])#prende la stringa da 1 a 5 escluso andando di 2 in 2 e samperà "un"
print(S2[:4]) #stamperà da 0 fino a 4 esluso.
print(S2[3:])#stamperà dal terzo fino alla fine.
print(S2[::-1])#stamperà dall'ultimo fino al primo.

#var = input("frase: ")
#stringa = "ciao"
#int(stringa)
#float(stringa)
"""
----------------------------------------------------------------------------------------------------
						I CONTENITORI
"""
#- Le liste
#- Le tuple
#- I dizionari
#Pernmettono di salvare più dati.

#LE LISTE:
l = [1,2,3,4]
print(type(l)) #otteniamo list
print(l)#stampiamo una lista a schermo
print(l[0])#per stampare un elemento (LINDICIZZAZIONE DELLE STRINGHE è UGUALE A QUELLO DELLE LISTE STESSA COSA PER LO SLICING).
print(l[1:3])#stampa dal 1 al 3
print(l[::-1])#stmapa la riga al contrario
l[1] = 9 #sono mutabili
print(l)
l.append(5) # è un metodo
print(l)

#LE TUPLE sono molto simili alle liste ma sono immutabili.
punto = (1.2,3.6)#una tupla fatta da una x e una y.
print(f"\nLa coordinata x del punto è {punto[0]}")
triangolo = [(1.5,3.6),(-1.0,0.0),(5.1,4.3)]
print(f"\nLa coordinata y del secondo vertice è: {triangolo[1][1]}\n")
#IL CICLO FOR
lista=[110,113,35,53,43,214]

#modo preferito (pythonico)
for elemento in lista:
	print(elemento,end=",")
print("")
#modo C-style
for i in range(0,len(lista)):
	print(lista[i],end=",")
	
print("\n")

"""
----------------------------------------------------------------------------------------------------
DIZIONARI
"""
d = {1:"Abello",2:"Armando"}
d2 = {"Abello":[8,9,10],"Armando":[12,32,43]}
#Indicizzazione e si fa mediante le chiavi
print(d[2])
print(d2["Abello"])


"""
----------------------------------------------------------------------------------------------------
CIFRARIO DI CESARE
"""
#prevede che ogni lettere la sostituiamo con quello sucessiva nell'alfabeto

#for k,v in dizionario.items(); #permette di scorre un intero dizionario

---------------------------------------
PAG 58/59
#ALTRO METODO PER FARE IL FOR
for i,e in enumerate(lista):
	print(i,e)

#WHILE
while condizione:
	codice

"""
ISTRUZIONI DI CONTROLLO

break (non lo si usa perché non bisogna interromper un cliclo)
pass (non fa nulla)
continue (quando viene chiamate in un ciclo salta al giro dopo)
"""

while True: #è dove sta tutto il programma.

def nomefunz(parametri ES: p1,p2):
	codice indentato
	return x,y

x,y = nome(p1,p2)


CLASSI

gli attributi e le calssi sono sempre pubbliche.